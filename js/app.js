/**
 * Abacus Online - –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –°–æ—Ä–æ–±–∞–Ω
 * –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */

import { Abacus } from './Abacus.js';
import { SettingsModal } from './Modal.js';

class AbacusApp {
  constructor() {
    // –≠–ª–µ–º–µ–Ω—Ç—ã DOM
    this.abacusContainer = document.getElementById('abacusContainer');

    // –°–æ—Å—Ç–æ—è–Ω–∏–µ
    this.settings = {
      digitCount: 10,
      decimalOffset: 0,
      showDigits: true
    };

    // –ò–Ω—Å—Ç–∞–Ω—Å—ã
    this.abacus = null;
    this.modal = null;

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    this.#init();
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   */
  #init() {
    // –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ localStorage
    this.#loadSettings();

    // –°–æ–∑–¥–∞—Ç—å –∞–±–∞–∫—É—Å
    this.#createAbacus();

    // –°–æ–∑–¥–∞—Ç—å –º–æ–¥–∞–ª
    this.#createModal();
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ –∞–±–∞–∫—É—Å–∞
   */
  #createAbacus() {
    this.abacus = new Abacus(this.abacusContainer, {
      digitCount: this.settings.digitCount,
      decimalOffset: this.settings.decimalOffset
    });

    // –ü—Ä–∏–º–µ–Ω–∏—Ç—å showDigits
    this.abacus.setShowDigits(this.settings.showDigits);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π (–¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏)
    this.abacus.setOnChange((value, columns) => {
      console.log(`–ê–±–∞–∫—É—Å: ${value}, –†–∞–∑—Ä—è–¥—ã:`, columns);
    });
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
   */
  #createModal() {
    this.modal = new SettingsModal({
      initialDigitCount: this.settings.digitCount,
      initialDecimalOffset: this.settings.decimalOffset,
      initialShowDigits: this.settings.showDigits
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    this.modal.setOnSave((newSettings) => {
      this.#applySettings(newSettings);
    });
  }

  /**
   * –ü—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
   */
  #applySettings(newSettings) {
    // –û–±–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    this.settings.digitCount = newSettings.digitCount;
    this.settings.decimalOffset = newSettings.decimalOffset;
    this.settings.showDigits = newSettings.showDigits;

    // –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∫ –∞–±–∞–∫—É—Å—É
    this.abacus.setDigitCount(newSettings.digitCount);
    this.abacus.setDecimalOffset(newSettings.decimalOffset);
    this.abacus.setShowDigits(newSettings.showDigits);

    // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ localStorage
    this.#saveSettings();

    console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã:', this.settings);
  }

  /**
   * –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ localStorage
   */
  #loadSettings() {
    try {
      const saved = localStorage.getItem('abacusSettings');
      if (saved) {
        const parsed = JSON.parse(saved);
        this.settings = {
          digitCount: Math.max(1, Math.min(23, parsed.digitCount ?? 10)),
          decimalOffset: Math.max(0, Math.min(4, parsed.decimalOffset ?? 0)),
          showDigits: parsed.showDigits !== false // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é true
        };
        console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', this.settings);
      }
    } catch (error) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
      this.settings = { digitCount: 10, decimalOffset: 0, showDigits: true };
    }
  }

  /**
   * –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ localStorage
   */
  #saveSettings() {
    try {
      localStorage.setItem('abacusSettings', JSON.stringify(this.settings));
      console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ localStorage');
    } catch (error) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
    }
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', () => {
  console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Abacus Online...');
  new AbacusApp();
  console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ!');
});
